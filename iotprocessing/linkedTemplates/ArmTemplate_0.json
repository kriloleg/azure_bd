{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "iotprocessing"
		},
		"BlobStorageService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorageService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorageService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorageService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IoTInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorageService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "incoming"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IoTOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorageService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "outcoming"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Incoming data processing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "String"
										},
										"sink": {
											"type": "Int16",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "Industry_name_NZSIOC",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "Variable_name",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "Value",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "IoTInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IoTOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IoTInput')]",
				"[concat(variables('factoryId'), '/datasets/IoTOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "IoTInput",
								"type": "DatasetReference"
							},
							"name": "iotsteam",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "IoTOutput",
								"type": "DatasetReference"
							},
							"name": "SummaryFor2018"
						}
					],
					"transformations": [
						{
							"name": "RecentYears"
						},
						{
							"name": "MapDrifted",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Summary"
						}
					],
					"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: true) ~> iotsteam\nMapDrifted filter(toInteger(Year) >= 2018) ~> RecentYears\niotsteam derive(Year = toShort(byName('Year')),\n\t\tIndustry_aggregation_NZSIOC = toString(byName('Industry_aggregation_NZSIOC')),\n\t\tIndustry_code_NZSIOC = toString(byName('Industry_code_NZSIOC')),\n\t\tIndustry_name_NZSIOC = toString(byName('Industry_name_NZSIOC')),\n\t\tUnits = toString(byName('Units')),\n\t\tVariable_code = toString(byName('Variable_code')),\n\t\tVariable_name = toString(byName('Variable_name')),\n\t\tVariable_category = toString(byName('Variable_category')),\n\t\tValue = toString(byName('Value')),\n\t\tIndustry_code_ANZSIC06 = toString(byName('Industry_code_ANZSIC06'))) ~> MapDrifted\nRecentYears aggregate(groupBy(Year,\n\t\tVariable_name),\n\tValue = sum(toDouble(Value))) ~> Summary\nSummary sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> SummaryFor2018"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IoTInput')]",
				"[concat(variables('factoryId'), '/datasets/IoTOutput')]"
			]
		}
	]
}